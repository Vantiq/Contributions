package collaborations.WarnNotification
import service Utils
import service CollaborationUtils
import service CollaborationGeneration


PROCEDURE PublishToTopic.start(collaboration, topic, event) HIDDEN
WITH ars_dependentResource="/collaborationtypes/WarnNotification", 
  properties = {taskName: "PublishToTopic", isGenerated: true}

log.debug("collaboration.WarnNotification.PublishToTopic: Preparing to publish {} to topic: {} for collaboration id: {}", [event, topic, collaboration.id])

// Publish events to update badging in UI
if (true) {
    PUBLISH {collaboration: collaboration.id, task: "PublishToTopic"} TO TOPIC "/collaborations.WarnNotification/debug"
}

PUBLISH event TO TOPIC @topic

var activityResults = collaboration.results["PublishToTopic"]
if (!activityResults) {
    activityResults = {}
}
activityResults.result = event
collaboration.results["PublishToTopic"] = activityResults
// Save the change to results
ALTER collaboration ({results: collaboration.results, id: collaboration.id})
log.debug("collaboration.WarnNotification.PublishToTopic: Successfully published event: {} to topic: {} for collaboration id: {}", [event, topic collaboration.id])SELECT EXACTLY ONE FROM collaborationtypes as ct WHERE name == "WarnNotification"

var activityType = ct.assembly["PublishToTopic"]

if (activityType != null AND activityType.additionalBehaviors != null) {
    var context = CollaborationGeneration.establishCollaborationContext(collaboration, activityType.instanceParameters)
    
}
