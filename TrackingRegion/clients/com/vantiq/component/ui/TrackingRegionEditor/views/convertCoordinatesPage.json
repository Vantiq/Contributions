{
  "bodyChildren" : {
    "rootArray" : [ "09f1a46a-5dc1-4025-8ae3-ba1eac2bb5e7" ],
    "widgets" : [ {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : -1,
      "fontFamily" : "inherit",
      "fontSize" : 18,
      "fontStyle" : "normal",
      "fontWeight" : "normal",
      "heightPolicy" : "naturalSize",
      "horzGravity" : "right",
      "horzWeight" : 1,
      "name" : "StaticText113613_58245",
      "row" : -1,
      "text" : "Coordinates Type:",
      "type" : "StaticText",
      "uuid" : "019d79d8-9e70-4284-9d3a-19a496d29ea9",
      "v" : 17,
      "vertGravity" : "center",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 1,
      "children" : [ "1b214d8d-bff2-4169-8766-96fa6223044f", "b784e5a4-418f-43f2-8acb-fa95cbf6503e" ],
      "column" : -1,
      "h" : 700.0626464472588,
      "heightPolicy" : "explicit",
      "horzGravity" : "center",
      "innerMargin" : 20,
      "name" : "HorizontalLayout102319",
      "row" : -1,
      "type" : "VerticalLayout",
      "uuid" : "09f1a46a-5dc1-4025-8ae3-ba1eac2bb5e7",
      "v" : 17,
      "vertGravity" : "center",
      "w" : 1454.7680667724608,
      "widthPolicy" : "explicit",
      "x" : 0,
      "y" : 0
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : 2,
      "fontFamily" : "inherit",
      "fontSize" : 20,
      "fontStyle" : "normal",
      "fontWeight" : "normal",
      "heightPolicy" : "naturalSize",
      "horzGravity" : "left",
      "name" : "StaticText104289_58245",
      "row" : 2,
      "text" : "C",
      "type" : "StaticText",
      "uuid" : "14cbdbf5-33bd-4ea6-907a-d19ba35dd07c",
      "v" : 17,
      "vertGravity" : "top",
      "widthPolicy" : "naturalSize"
    }, {
      "CSSClass" : "vantiqGridLayout",
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "children" : [ "319342ab-10ff-4a61-833b-3949a09785ca", "452a39c5-36f9-4ba0-81c0-508a285e84e2" ],
      "column" : -1,
      "componentConfiguration" : {
        "configurationProperties" : [ {
          "defaultValue" : { },
          "hidden" : true,
          "propertyLabel" : "convertExpression",
          "propertyType" : 60,
          "type" : 1
        }, {
          "defaultValue" : "\tvar layoutWidget = client.getComponentWidget(configuration, \"cFrameLayout\");\n    var frameWidth = layoutWidget.trueImageWidth;\n    var frameHeight = layoutWidget.trueImageHeight;\n    var convertExpression = {\n        \n    \timageCoordinates : [\n            {x: 0, y: 0},\n            {x: frameWidth, y: 0},\n            {x: frameWidth, y: frameHeight},\n            {x:0, y: frameHeight}\n    \t]\n    };\n    // convert zonePoints (based on scaled image size) to real image size.\n    var floorplanWidget = client.getComponentWidget(configuration, \"floorplanLayout\");\n    var widthRatio = floorplanWidget.scaledImageWidth / floorplanWidget.trueImageWidth;\n    var heightRadio = floorplanWidget.scaledImageHeight / floorplanWidget.trueImageHeight;\n    var convertedPoints = [];\n    if (client.data.targetCoorType == \"Image\") {\n        for (var i=0; i<floorplanWidget.configuration.zonePoints.length; i++) {\n            convertedPoints.push({\n                x:floorplanWidget.configuration.zonePoints[i].x/widthRatio,\n                y:floorplanWidget.configuration.zonePoints[i].y/heightRadio\n            });\n        }\n    } else {\n        // Map\n        var mapWidget = client.getComponentWidget(configuration, \"targetMap\");\n        var map = mapWidget.map;\n        convertExpression.zoom = map.zoom;\n        var markerArray = map.markers;\n        if (markerArray && (markerArray.length == 4)) {\n            for (var i=0; i<markerArray.length; i++) {\n                var position = markerArray[i].position;\n                convertedPoints.push({\n                    lat: position.lat(),\n                    lon: position.lng()\n                });\n            }\n        }\n    }\n    convertExpression.convertedCoordinates = convertedPoints;\n\n    return convertExpression;",
          "description" : "Return the convertion expression.",
          "hidden" : false,
          "propertyLabel" : "getConvertExperssion",
          "propertyType" : 62,
          "type" : 1
        }, {
          "defaultValue" : "\tconfiguration.isLoadingZones = true;\n    if (expressionObj) {\n        configuration.convertExpression = expressionObj;  \n    }  \n    //console.log(\"loading convertExpression: \"+JSON.stringify(configuration.convertExpression, null, 3));\n    var cameraLayout = client.getComponentWidget(configuration, \"cFrameLayout\");\n    var layoutWidget = client.getComponentWidget(configuration, \"floorplanLayout\");\n    var canvasWidget = client.getComponentWidget(configuration, \"floorZoneCanvas\");\n\n    if (configuration.imageUrl) {\n        cameraLayout.url = configuration.imageUrl;\n    } else {\n        configuration.imageUrl = cameraLayout.url;\n    }\n    if (configuration.convertedUrl) {\n        layoutWidget.url = configuration.convertedUrl;\n    } else {\n        configuration.convertedUrl = layoutWidget.url;\n    }\n\n    var savedPoints = [];\n    if (layoutWidget.configuration.convertExpression ) {\n        savedPoints = layoutWidget.configuration.convertExpression.convertedCoordinates;\n    }\n    client.data.mapSeted = false;\n    if (savedPoints && (savedPoints.length > 0) && (savedPoints[0].lat !== undefined)) {\n        // this is a map coordinates\n        client.data.targetCoorType = \"Map\";  \n        client.getComponentWidget(configuration, \"DL_CoorType\").boundValue = client.data.targetCoorType;\n\n        var mapWidget = client.getComponentWidget(configuration, \"targetMap\");\n        client.getComponentWidget(configuration, \"floorplanLayout\").isVisible = false;\n        client.getComponentWidget(configuration, \"convertCoorChgBgBtn\").isVisible = false;\n        mapWidget.isVisible = true;\n        client.getComponentWidget(configuration, \"mapIntroText\").isVisible = false;\n        client.getComponentWidget(configuration, \"clearMarkersBtn\").isVisible = true;\n        var map = mapWidget.map;\n        if (configuration.zoom) {\n            map.zoom = configuration.zoom;\n        }\n        // load markers to Map\n        var bounds = new google.maps.LatLngBounds();        \n        map.markers = [];\n        var markerArray = [];\n        var labelsArray = [\"A\", \"B\", \"C\", \"D\"];\n        for (var i = 0; i < savedPoints.length; i++) {\n            var marker = new google.maps.Marker({\n                position: { lat: savedPoints[i].lat, lng: savedPoints[i].lon },\n                label: labelsArray[i],\n                map: map,\n                draggable:true\n            });\n            markerArray.push(marker);\n            bounds.extend(marker.position);\n        }\n        map.markers = markerArray;\n        map.fitBounds(bounds);\n        client.data.mapSeted = true;\n    } else {\n        client.data.targetCoorType = \"Image\";     \n        var mapWidget = client.getComponentWidget(configuration, \"targetMap\");\n        client.getComponentWidget(configuration, \"floorplanLayout\").isVisible = true;\n        client.getComponentWidget(configuration, \"convertCoorChgBgBtn\").isVisible = true;\n        mapWidget.isVisible = false;\n        client.getComponentWidget(configuration, \"mapIntroText\").isVisible = false;\n        client.getComponentWidget(configuration, \"clearMarkersBtn\").isVisible = false;  \n        client.setTimeout(function() {\n            com.vantiq.component.ui.resizeToNewBackground(client, layoutWidget, canvasWidget, 1,\n                function(client) {\n                    if (client.data.targetCoorType == \"Image\") {\n                        // calcuate the zone points based on scaled image\n                        var widthRatio = layoutWidget.scaledImageWidth / layoutWidget.trueImageWidth;\n                        var heightRadio = layoutWidget.scaledImageHeight / layoutWidget.trueImageHeight;\n\n                        var zonePoints = [];\n                        var savedPoints = [];\n                        if (layoutWidget.configuration.convertExpression ) {\n                            savedPoints = layoutWidget.configuration.convertExpression.convertedCoordinates;\n                        }\n                        if (!savedPoints || (savedPoints.length < 3)) {\n                            client.data.targetCoorType = \"Image\";\n                            // create a default zone at the enter of view\n                            var zoneWidth = layoutWidget.scaledImageWidth/4;\n                            var zoneHeight = layoutWidget.scaledImageHeight/4;\n                            var x = layoutWidget.scaledImageWidth/2 - zoneWidth/2;\n                            var y =  layoutWidget.scaledImageHeight/2 - zoneHeight/2;\n                            zonePoints.push({x: x, y: y});\n                            zonePoints.push({x: x + zoneWidth, y: y});\n                            zonePoints.push({x: x + zoneWidth, y: y + zoneHeight});\n                            zonePoints.push({x: x, y: y + zoneHeight});\n\n                            layoutWidget.configuration.zonePoints = zonePoints;                    \n                        } else {\n                            if (savedPoints[0].x !== undefined) {\n                                // convert region points into the scalled image coord\n                                for (var i = 0; i < savedPoints.length; i++) {\n                                    zonePoints.push({\n                                        x: savedPoints[i].x * widthRatio,\n                                        y: savedPoints[i].y * heightRadio\n                                    });\n                                }\n                            }\n                        }            \n\n                        // display the zone.\n                        layoutWidget.configuration.zonePoints = zonePoints;\n                        canvasWidget.repaint();\n                        layoutWidget.configuration.setupDnD();\n                    }                \n            });                       \n        }, 200);\n    }\n\n\n        \n",
          "description" : "Display the given conversion expression in this component.",
          "functionParameters" : [ "expressionObj" ],
          "hidden" : false,
          "propertyLabel" : "loadConvertExpression",
          "propertyType" : 62,
          "type" : 1
        }, {
          "defaultValue" : null,
          "description" : "URL of image used by boundary, distance and direction.",
          "hidden" : false,
          "propertyLabel" : "imageUrl",
          "propertyType" : 50,
          "type" : 1
        }, {
          "defaultValue" : null,
          "description" : "URL of the image used for converted coordinates.",
          "hidden" : false,
          "propertyLabel" : "convertedUrl",
          "propertyType" : 50,
          "type" : 1
        }, {
          "defaultValue" : null,
          "hidden" : true,
          "propertyLabel" : "zonePoints",
          "propertyType" : 60,
          "type" : 1
        }, {
          "defaultValue" : false,
          "hidden" : true,
          "propertyLabel" : "isLoadingZones",
          "propertyType" : 4,
          "type" : 1
        }, {
          "defaultValue" : "    var layoutWidget = client.getComponentWidget(configuration, \"floorplanLayout\");\n    var canvasWidget = client.getComponentWidget(configuration, \"floorZoneCanvas\");\n\n    //console.log(\"setup drag & drop in convertCoordinatesPage for the first time.\");\n    var nativeCanvas = document.getElementById(canvasWidget.name).children[0];\n    nativeCanvas.addEventListener('mousedown', function(e) {\n        // check if clicked on one of the boundary points\n        layoutWidget.configuration.draggingPointIndex = -1;\n        for (var i = 0; i < layoutWidget.configuration.zonePoints.length; i++) {\n            var p = layoutWidget.configuration.zonePoints[i];\n            // calculate the distance between mouse click to point center\n            if (com.vantiq.component.ui.isClickedOnDNDPoint(nativeCanvas, p, e)) {\n                // start dragging\n                layoutWidget.configuration.draggingPointIndex = i;\n                p.x = e.offsetX;\n                p.y = e.offsetY;\n                canvasWidget.repaint();\n                break;\n            }\n        }\n    });\n    nativeCanvas.addEventListener('mousemove', function(e) {\n        if ((e.offsetX < 1) || (e.offsetX > (layoutWidget.scaledImageWidth-1)) ||\n            (e.offsetY < 1) || (e.offsetY > (layoutWidget.scaledImageHeight-1))) {\n            // stop the drag&drop after touching the edge of background image.\n            layoutWidget.configuration.draggingPointIndex = -1;\n        } else if (layoutWidget.configuration.draggingPointIndex >= 0) {\n            var p = layoutWidget.configuration.zonePoints[layoutWidget.configuration.draggingPointIndex];\n            // update the point and redraw\n            p.x = e.offsetX;\n            p.y = e.offsetY;\n            canvasWidget.repaint();\n        }\n    });\n    nativeCanvas.addEventListener('mouseup', function(e) {\n        layoutWidget.configuration.draggingPointIndex = -1;\n    });   \n",
          "hidden" : true,
          "propertyLabel" : "setupDnD",
          "propertyType" : 62,
          "type" : 1
        }, {
          "defaultValue" : 8,
          "hidden" : false,
          "propertyLabel" : "zoom",
          "propertyType" : 37,
          "type" : 1
        } ],
        "originalWidgetName" : "ConvertCoordinates"
      },
      "componentName" : "com.vantiq.component.ui.ConvertCoordinates",
      "componentSuffix" : "_58245",
      "componentTimestamp" : "2023-10-20T20:51:02.925Z",
      "heightPolicy" : "sizeToCell",
      "horzGravity" : "center",
      "innerMargin" : 10,
      "isComponent" : true,
      "name" : "convertCoorComp",
      "row" : 0,
      "type" : "HorizontalLayout",
      "uuid" : "1b214d8d-bff2-4169-8766-96fa6223044f",
      "v" : 17,
      "vertGravity" : "center",
      "vertWeight" : 1,
      "widthPolicy" : "sizeToCell"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : -1,
      "fontFamily" : "inherit",
      "fontSize" : 20,
      "fontStyle" : "normal",
      "fontWeight" : "normal",
      "heightPolicy" : "naturalSize",
      "horzGravity" : "left",
      "name" : "mapIntroText_58245",
      "row" : 2,
      "text" : "Click on map to place 4 markers.",
      "type" : "StaticText",
      "uuid" : "2d404295-c18d-416c-b83f-345ba1cc8c79",
      "v" : 17,
      "vertGravity" : "center",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "children" : [ "dcd89e4b-b7ac-4c24-b59a-616dfa15e743", "6edf0cd9-2400-4cb2-8b2c-39f62c1f3511", "a6fe50a2-793f-4533-9b78-2a07d489c2d2", "75cadb8d-0f38-4157-8c60-5fb01f4e8e13", "14cbdbf5-33bd-4ea6-907a-d19ba35dd07c" ],
      "column" : -1,
      "columns" : 3,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "center",
      "horzMargin" : 0,
      "name" : "GridLayout136_58245",
      "row" : -1,
      "rows" : 4,
      "type" : "GridLayout",
      "uuid" : "3071599e-9ddd-4306-88b6-1a1fc23bd55b",
      "v" : 17,
      "vertGravity" : "top",
      "vertMargin" : 0,
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "children" : [ "a176e15a-fd0e-4ace-95cb-0faa36b06f55", "3071599e-9ddd-4306-88b6-1a1fc23bd55b" ],
      "column" : -1,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "center",
      "innerMargin" : 20,
      "name" : "VerticalLayout107227_58245",
      "row" : 0,
      "type" : "VerticalLayout",
      "uuid" : "319342ab-10ff-4a61-833b-3949a09785ca",
      "v" : 17,
      "vertGravity" : "top",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "buttonBackgroundColor" : "default",
      "buttonLabel" : "@com.vantiq.component.ui.BoundaryEditor__btn.Cancel",
      "buttonLabelColor" : "default",
      "buttonLabelSize" : 14,
      "buttonLabelStyle" : "bold",
      "column" : -1,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "right",
      "horzWeight" : 1,
      "name" : "cancelConvertCoorBtn",
      "row" : -1,
      "submitValue" : 100,
      "type" : "Button",
      "uuid" : "438eecfb-c8cc-4af4-8f9e-74aa7f48a6b5",
      "v" : 17,
      "vertGravity" : "center",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "children" : [ "bf2d0dc9-5b44-4fb2-b28a-81ee7a13302d", "f31df6b3-fc9c-4ccf-bcc5-d35a4a5e3eb1", "e6a444e5-f07d-41d4-9126-ba0f90ca9148" ],
      "column" : -1,
      "heightPolicy" : "sizeToCell",
      "horzGravity" : "left",
      "horzMargin" : 0,
      "horzWeight" : 1,
      "innerMargin" : 1,
      "name" : "VerticalLayout84558_58245",
      "row" : -1,
      "type" : "VerticalLayout",
      "uuid" : "452a39c5-36f9-4ba0-81c0-508a285e84e2",
      "v" : 17,
      "vertGravity" : "top",
      "vertMargin" : 0,
      "vertWeight" : 1,
      "widthPolicy" : "sizeToCell"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : 2,
      "fontFamily" : "inherit",
      "fontSize" : 20,
      "fontStyle" : "normal",
      "fontWeight" : "normal",
      "heightPolicy" : "naturalSize",
      "horzGravity" : "left",
      "name" : "StaticText104287_58245",
      "row" : 0,
      "text" : "B",
      "type" : "StaticText",
      "uuid" : "6edf0cd9-2400-4cb2-8b2c-39f62c1f3511",
      "v" : 17,
      "vertGravity" : "bottom",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : 0,
      "fontFamily" : "inherit",
      "fontSize" : 20,
      "fontStyle" : "normal",
      "fontWeight" : "normal",
      "heightPolicy" : "naturalSize",
      "horzGravity" : "right",
      "name" : "StaticText104288_58245",
      "row" : 2,
      "text" : "D",
      "type" : "StaticText",
      "uuid" : "75cadb8d-0f38-4157-8c60-5fb01f4e8e13",
      "v" : 17,
      "vertGravity" : "top",
      "widthPolicy" : "naturalSize"
    }, {
      "binding" : "client.data.targetCoorType",
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : -1,
      "default" : "Image",
      "enumeratedList" : [ {
        "label" : "@com.vantiq.component.ui.ConvertCoordinates__label.image",
        "value" : "Image"
      }, {
        "label" : "@com.vantiq.component.ui.ConvertCoordinates__label.map",
        "value" : "Map"
      } ],
      "heightPolicy" : "naturalSize",
      "horzGravity" : "center",
      "name" : "DL_CoorType_58245",
      "row" : -1,
      "type" : "Droplist",
      "uuid" : "75f9a1d7-6c9b-48e3-8ae7-c493bb395e4f",
      "v" : 17,
      "vertGravity" : "center",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : -1,
      "fontFamily" : "inherit",
      "fontSize" : 18,
      "fontStyle" : "normal",
      "fontWeight" : "normal",
      "heightPolicy" : "naturalSize",
      "horzGravity" : "left",
      "name" : "StaticText113587_58245",
      "row" : -1,
      "text" : "Convert 4 corners of the image to the target coordinates.",
      "type" : "StaticText",
      "uuid" : "a176e15a-fd0e-4ace-95cb-0faa36b06f55",
      "v" : 17,
      "vertGravity" : "center",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderThickness" : 0,
      "children" : [ ],
      "column" : 1,
      "h" : 150,
      "heatmapConfig" : null,
      "heatmapOpacity" : 0.4,
      "heatmapRadius" : 40,
      "heightPolicy" : "explicit",
      "horzGravity" : "center",
      "innerMargin" : 20,
      "name" : "cFrameLayout_58245",
      "row" : 1,
      "type" : "FixedLayout",
      "url" : "../../docs/entranceSample.png",
      "uuid" : "a6fe50a2-793f-4533-9b78-2a07d489c2d2",
      "v" : 17,
      "vertGravity" : "center",
      "w" : 200,
      "widthPolicy" : "explicit"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "children" : [ "438eecfb-c8cc-4af4-8f9e-74aa7f48a6b5", "b899f796-d99b-416d-8f8c-d00238f192de" ],
      "column" : -1,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "center",
      "horzMargin" : 0,
      "innerMargin" : 5,
      "name" : "HorizontalLayout103174",
      "row" : -1,
      "type" : "HorizontalLayout",
      "uuid" : "b784e5a4-418f-43f2-8acb-fa95cbf6503e",
      "v" : 17,
      "vertGravity" : "center",
      "vertMargin" : 0,
      "widthPolicy" : "sizeToCell"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "buttonBackgroundColor" : "default",
      "buttonLabel" : "@com.vantiq.component.ui.BoundaryEditor__btn.OK",
      "buttonLabelColor" : "default",
      "buttonLabelSize" : 14,
      "buttonLabelStyle" : "bold",
      "column" : -1,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "center",
      "name" : "okConvertCoorBtn",
      "row" : -1,
      "submitValue" : 100,
      "type" : "Button",
      "uuid" : "b899f796-d99b-416d-8f8c-d00238f192de",
      "v" : 17,
      "vertGravity" : "center",
      "widthPolicy" : "sizeToCell"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : -1,
      "h" : 242,
      "heightPolicy" : "explicit",
      "horzGravity" : "center",
      "name" : "floorZoneCanvas_58245",
      "row" : -1,
      "type" : "Canvas",
      "uuid" : "bd7f45db-a48a-4bb5-9afd-e7b13a9c5c9d",
      "v" : 17,
      "vertGravity" : "center",
      "w" : 407,
      "widthPolicy" : "explicit",
      "x" : 0,
      "y" : 0
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "children" : [ "019d79d8-9e70-4284-9d3a-19a496d29ea9", "75f9a1d7-6c9b-48e3-8ae7-c493bb395e4f", "2d404295-c18d-416c-b83f-345ba1cc8c79", "e568c31c-12ab-4158-8113-8e55d1d4965a", "d70803bd-bdc9-45bd-b53c-09e5a2ce48be" ],
      "column" : -1,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "center",
      "horzMargin" : 0,
      "innerMargin" : 1,
      "name" : "HorizontalLayout108675_58245",
      "row" : 0,
      "type" : "HorizontalLayout",
      "uuid" : "bf2d0dc9-5b44-4fb2-b28a-81ee7a13302d",
      "v" : 17,
      "vertGravity" : "top",
      "vertMargin" : 0,
      "widthPolicy" : "sizeToCell"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "buttonBackgroundColor" : "default",
      "buttonLabel" : "@com.vantiq.component.ui.ConvertCoordinates__btn.change.image",
      "buttonLabelColor" : "default",
      "buttonLabelSize" : 14,
      "buttonLabelStyle" : "bold",
      "column" : -1,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "left",
      "name" : "convertCoorChgBgBtn_58245",
      "row" : 2,
      "submitValue" : 100,
      "type" : "Button",
      "uuid" : "d70803bd-bdc9-45bd-b53c-09e5a2ce48be",
      "v" : 17,
      "vertGravity" : "center",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "column" : 0,
      "fontFamily" : "inherit",
      "fontSize" : 20,
      "fontStyle" : "normal",
      "fontWeight" : "normal",
      "heightPolicy" : "naturalSize",
      "horzGravity" : "right",
      "name" : "StaticText104286_58245",
      "row" : 0,
      "text" : "A",
      "type" : "StaticText",
      "uuid" : "dcd89e4b-b7ac-4c24-b59a-616dfa15e743",
      "v" : 17,
      "vertGravity" : "bottom",
      "widthPolicy" : "naturalSize"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 0,
      "buttonBackgroundColor" : "default",
      "buttonLabel" : "Clear Markers",
      "buttonLabelColor" : "default",
      "buttonLabelSize" : 14,
      "buttonLabelStyle" : "bold",
      "column" : -1,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "center",
      "name" : "clearMarkersBtn_58245",
      "row" : 1,
      "submitValue" : 100,
      "type" : "Button",
      "uuid" : "e568c31c-12ab-4158-8113-8e55d1d4965a",
      "v" : 17,
      "vertGravity" : "center",
      "widthPolicy" : "sizeToCell"
    }, {
      "borderColor" : "Default",
      "borderRadius" : 4,
      "borderThickness" : 1,
      "column" : -1,
      "dataStreamGroupedByFiltersString" : "",
      "dataStreamProperty" : null,
      "dataType" : null,
      "fixedCenter" : true,
      "heightPolicy" : "sizeToCell",
      "horzGravity" : "left",
      "name" : "targetMap_58245",
      "naturalKey" : null,
      "operation" : "insert",
      "row" : -1,
      "type" : "DynamicMapViewer",
      "uuid" : "e6a444e5-f07d-41d4-9126-ba0f90ca9148",
      "v" : 17,
      "vertGravity" : "top",
      "vertWeight" : 1,
      "widthPolicy" : "sizeToCell"
    }, {
      "backgroundImagePosition" : "top",
      "backgroundImageSize" : "contain",
      "borderColor" : "Default",
      "borderThickness" : 1,
      "children" : [ "bd7f45db-a48a-4bb5-9afd-e7b13a9c5c9d" ],
      "column" : -1,
      "heatmapConfig" : null,
      "heatmapOpacity" : 0.4,
      "heatmapRadius" : 40,
      "heightPolicy" : "naturalSize",
      "horzGravity" : "left",
      "horzWeight" : 1,
      "innerMargin" : 20,
      "name" : "floorplanLayout_58245",
      "row" : -1,
      "type" : "FixedLayout",
      "url" : "../../docs/floorplanSample.png",
      "uuid" : "f31df6b3-fc9c-4ccf-bcc5-d35a4a5e3eb1",
      "v" : 17,
      "vertGravity" : "top",
      "vertWeight" : 1,
      "widthPolicy" : "sizeToCell"
    } ]
  },
  "data" : {
    "properties" : {
      "convertExpression" : {
        "defaultLabel" : "convertExpression",
        "type" : "Object"
      },
      "draggingPointIndex" : {
        "defaultLabel" : "draggingPointIndex",
        "defaultValue" : -1,
        "type" : "Integer"
      },
      "isDnDInitialized" : {
        "defaultLabel" : "isDnDInitialized",
        "defaultValue" : false,
        "type" : "Boolean"
      },
      "ownerSpace" : {
        "defaultLabel" : "ownerSpace",
        "type" : "Object"
      },
      "viewObj" : {
        "defaultLabel" : "viewObj",
        "type" : "Object"
      },
      "zonePoints" : {
        "defaultLabel" : "zonePoints",
        "defaultValue" : [ ],
        "isArray" : true,
        "type" : "Object"
      }
    }
  },
  "footerChildren" : [ ],
  "hasFooter" : false,
  "layoutType" : "browser"
}